{
  "tunebridge.php": "<?php\n/**\n * Plugin Name: TuneBridge\n * Description: A tool for researching music platforms, playlists, curators, and artists.\n * Version: 1.0.0\n * Author: WP Plugin Architect\n * Author URI: https://chatgpt.com/g/g-6cqBCrKTn-wp-plugin-architect\n * Text Domain: tunebridge\n * Domain Path: /languages\n */\n\ndefined( 'ABSPATH' ) || exit;\n\n// Load the autoloader.\nrequire_once plugin_dir_path( __FILE__ ) . 'includes/core/Autoloader.php';\n\n\\Tunebridge\\Core\\Autoloader::register();\n\n// Initialize plugin constants.\n\\Tunebridge\\Core\\Plugin::init();\n\n// Register CLI commands if WP_CLI is available.\nif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\\Tunebridge\\CLI\\CLI::register();\n}\n",
  "uninstall.php": "<?php\n/**\n * Uninstall cleanup for TuneBridge.\n *\n * @package TuneBridge\n */\n\ndefined( 'WP_UNINSTALL_PLUGIN' ) || exit;\n\ndelete_option( 'tunebridge_settings' );\n",
  "CHANGELOG.md": "# Changelog\n\n## [1.0.5] - Dashboard block structure finalized\n- Rendered 5 modular dashboard blocks.\n- Updated Dashboard_Page loader.\n\n## [1.0.4] - Admin menu and dashboard page structure\n- Implemented WP Admin menu: Dashboard, Messaging, Contacts, Settings.\n- Registered all submenu pages under 'TuneBridge'.\n- Created Dashboard_Page class with block loader.\n- Initialized dashboard block layout system.\n\n## [1.0.3] - Version bump CLI correction\n- Fixed preg_replace issue in CLI version bump command.\n- Switched to preg_replace_callback for safe version editing.\n- Ensured CLI bump command writes valid PHP.\n\n## [1.0.2] - CLI version bump command\n- Added `wp tunebridge version get` and `version bump` commands.\n- CLI command now edits Plugin.php version constant.\n- Registered CLI command in main plugin bootstrap.\n\n## [1.0.1] - Plugin structure & autoload\n- Plugin.php version constant added.\n- Base folders scaffolded: core, admin, cli, providers.\n- Initial CLI class structure created.\n- Snapshot JSON system introduced for crash recovery.\n\n## [1.0.0] - Initial plugin setup\n- Plugin activated successfully.\n- Plugin headers and bootstrap added.\n- Text domain set to `tunebridge`.\n\n## [1.0.6] - Playlist Search AJAX integration\n- Added JavaScript-powered search form for Spotify playlists.\n- Created Playlist_Search_Ajax handler with nonce and permission checks.\n- Integrated Spotify Web API search via client credentials.\n- Live AJAX results rendered into table format.\n\n## [1.0.7] - 2025-09-18\n- Stubbed out Messaging and Contacts pages to avoid menu registration errors.\n- Cleaned and finalized Admin.php with proper namespacing and requires.\n- Verified asset loading, menu registration, and submenu consistency.\n\n## [1.0.8] - 2025-09-18\n- Added centralized mock data provider in `Mock_Data.php` for testing.\n- Added toggle support to use mock data instead of real APIs.\n- Updated Plugin.php to load mock provider on init.\n\n## [1.0.9] - 2025-09-18\n- Developer Settings section added to Settings page.\n- Toggle to enable mock data responses implemented.\n- Refactored Settings_Page to preserve existing structure.\n",
  "includes/providers/ProviderInterface.php": "<?php\n\nnamespace Tunebridge\\Providers;\n/**\n * Provider interface for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge\\Providers;\n\ndefined( 'ABSPATH' ) || exit;\n\ninterface Provider_Interface {\n\tpublic function search_playlists( $query, $args = [] );\n\tpublic function search_artists( $query, $args = [] );\n}\n",
  "includes/providers/SpotifyProvider.php": "<?php\n\nnamespace Tunebridge\\Providers;\n/**\n * Mock Spotify provider (MVP).\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge\\Providers;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Spotify implements Provider_Interface {\n\n\tpublic function __construct( $client_id = '', $client_secret = '' ) {}\n\n\tpublic function search_playlists( $query, $args = [] ) {\n\t\t$q = sanitize_text_field( $query );\n\t\treturn [\n\t\t\t[ 'id' => 'mock_pl_1', 'name' => 'Indie Fresh Finds', 'curator' => 'Curator A', 'url' => 'https://open.spotify.com/playlist/111', 'tracks' => [ 'Song A', 'Song B', 'Song C' ], 'matched_q' => $q ],\n\t\t\t[ 'id' => 'mock_pl_2', 'name' => 'Chill Vibes', 'curator' => 'Curator B', 'url' => 'https://open.spotify.com/playlist/222', 'tracks' => [ 'Song D', 'Song E' ], 'matched_q' => $q ],\n\t\t];\n\t}\n\n\tpublic function search_artists( $query, $args = [] ) {\n\t\t$q = sanitize_text_field( $query );\n\t\treturn [\n\t\t\t[ 'id' => 'mock_ar_1', 'name' => 'The Mockers', 'genres' => [ 'indie rock', 'alt' ], 'spotify' => 'https://open.spotify.com/artist/aaa', 'socials' => [ 'instagram' => 'https://instagram.com/mockers', 'twitter' => 'https://twitter.com/mockers' ], 'matched_q' => $q ],\n\t\t\t[ 'id' => 'mock_ar_2', 'name' => 'Lo-Fi Cat', 'genres' => [ 'lo-fi', 'beats' ], 'spotify' => 'https://open.spotify.com/artist/bbb', 'socials' => [], 'matched_q' => $q ],\n\t\t];\n\t}\n}\n",
  "includes/admin/Admin.php": "<?php\n\nnamespace Tunebridge\\Admin;\n/**\n * Admin menu and assets for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Admin {\n\n\tpublic static function register_menu() {\n\t\tadd_menu_page(\n\t\t\t__( 'TuneBridge', 'tunebridge' ),\n\t\t\t__( 'TuneBridge', 'tunebridge' ),\n\t\t\t'manage_tunebridge',\n\t\t\t'tunebridge',\n\t\t\t[ __CLASS__, 'render_dashboard' ],\n\t\t\t'dashicons-playlist-audio',\n\t\t\t30\n\t\t);\n\n\t\tadd_submenu_page(\n\t\t\t'tunebridge',\n\t\t\t__( 'Dashboard', 'tunebridge' ),\n\t\t\t__( 'Dashboard', 'tunebridge' ),\n\t\t\t'view_tunebridge',\n\t\t\t'tunebridge',\n\t\t\t[ __CLASS__, 'render_dashboard' ]\n\t\t);\n\n\t\tadd_submenu_page(\n\t\t\t'tunebridge',\n\t\t\t__( 'Messaging', 'tunebridge' ),\n\t\t\t__( 'Messaging', 'tunebridge' ),\n\t\t\t'view_tunebridge',\n\t\t\t'tunebridge-messaging',\n\t\t\t[ __CLASS__, 'render_messaging' ]\n\t\t);\n\n\t\tadd_submenu_page(\n\t\t\t'tunebridge',\n\t\t\t__( 'Contacts', 'tunebridge' ),\n\t\t\t__( 'Contacts', 'tunebridge' ),\n\t\t\t'view_tunebridge',\n\t\t\t'tunebridge-contacts',\n\t\t\t[ __CLASS__, 'render_contacts' ]\n\t\t);\n\n\t\tadd_submenu_page(\n\t\t\t'tunebridge',\n\t\t\t__( 'Settings', 'tunebridge' ),\n\t\t\t__( 'Settings', 'tunebridge' ),\n\t\t\t'manage_tunebridge_settings',\n\t\t\t'tunebridge-settings',\n\t\t\t[ __CLASS__, 'render_settings' ]\n\t\t);\n\t}\n\n\tpublic static function enqueue_assets( $hook ) {\n\t\tif ( strpos( $hook, 'tunebridge' ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_enqueue_style(\n\t\t\t'tunebridge-bootstrap',\n\t\t\t'https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css',\n\t\t\t[],\n\t\t\t'5.3.2'\n\t\t);\n\n\t\twp_enqueue_script(\n\t\t\t'tunebridge-bootstrap',\n\t\t\t'https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js',\n\t\t\t[],\n\t\t\t'5.3.2',\n\t\t\ttrue\n\t\t);\n\n\t\twp_enqueue_style(\n\t\t\t'tunebridge-admin',\n\t\t\tTUNEBRIDGE_PLUGIN_URL . 'assets/css/admin.css',\n\t\t\t[],\n\t\t\tTUNEBRIDGE_VERSION\n\t\t);\n\n\t\twp_enqueue_script(\n\t\t\t'tunebridge-admin',\n\t\t\tTUNEBRIDGE_PLUGIN_URL . 'assets/js/admin.js',\n\t\t\t[],\n\t\t\tTUNEBRIDGE_VERSION,\n\t\t\ttrue\n\t\t);\n\n\t\twp_localize_script( 'tunebridge-admin', 'TuneBridgeData', [\n\t\t\t'ajax_url' => admin_url( 'admin-ajax.php' ),\n\t\t\t'nonce'    => wp_create_nonce( 'tunebridge_nonce' ),\n\t\t] );\n\t}\n\n\tpublic static function render_dashboard() {\n\t\tDashboard::render();\n\t}\n\n\tpublic static function render_messaging() {\n\t\tMessaging::render();\n\t}\n\n\tpublic static function render_contacts() {\n\t\tContacts::render();\n\t}\n\n\tpublic static function render_settings() {\n\t\tSettings::render();\n\t}\n}\n",
  "includes/admin/Dashboard.php": "<?php\n\nnamespace Tunebridge\\Admin;\n/**\n * Dashboard UI rendering.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Dashboard {\n\n\tpublic static function render() {\n\t\t?>\n\t\t<div class=\"wrap tunebridge-wrap\">\n\t\t\t<h1 class=\"wp-heading-inline\"><?php esc_html_e( 'TuneBridge Dashboard', 'tunebridge' ); ?></h1>\n\n\t\t\t<nav class=\"nav-tab-wrapper\">\n\t\t\t\t<a href=\"#\" class=\"nav-tab nav-tab-active\" data-tab=\"dashboard\"><?php esc_html_e( 'Dashboard', 'tunebridge' ); ?></a>\n\t\t\t\t<a href=\"#\" class=\"nav-tab\" data-tab=\"messaging\"><?php esc_html_e( 'Messaging', 'tunebridge' ); ?></a>\n\t\t\t\t<a href=\"#\" class=\"nav-tab\" data-tab=\"contacts\"><?php esc_html_e( 'Contacts', 'tunebridge' ); ?></a>\n\t\t\t</nav>\n\n\t\t\t<div class=\"tunebridge-tab-content\">\n\t\t\t\t<div id=\"tab-dashboard\" class=\"tab-section active\">\n\t\t\t\t\t<?php \\TuneBridge\\load_template_part( 'dashboard.php' ); ?>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"tab-messaging\" class=\"tab-section\">\n\t\t\t\t\t<p><?php esc_html_e( 'Messaging content coming soon.', 'tunebridge' ); ?></p>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"tab-contacts\" class=\"tab-section\">\n\t\t\t\t\t<p><?php esc_html_e( 'Contacts content coming soon.', 'tunebridge' ); ?></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<?php\n\t}\n}\n",
  "includes/admin/Contacts.php": "<?php\n\nnamespace Tunebridge\\Admin;\n/**\n * Contacts management \u2013 custom post type & admin UI.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Contacts {\n\n\tpublic static function init() {\n\t\tadd_action( 'init', [ __CLASS__, 'register_post_type' ] );\n\t\tadd_action( 'add_meta_boxes', [ __CLASS__, 'register_meta_boxes' ] );\n\t\tadd_action( 'save_post_tunebridge_contact', [ __CLASS__, 'save_post' ] );\n\t\tadd_action( 'admin_post_tunebridge_export_csv', [ __CLASS__, 'export_csv' ] );\n\t}\n\n\tpublic static function register_post_type() {\n\t\t$labels = [\n\t\t\t'name'               => __( 'Contacts', 'tunebridge' ),\n\t\t\t'singular_name'      => __( 'Contact', 'tunebridge' ),\n\t\t\t'menu_name'          => __( 'Contacts', 'tunebridge' ),\n\t\t\t'name_admin_bar'     => __( 'Contact', 'tunebridge' ),\n\t\t\t'add_new'            => __( 'Add New', 'tunebridge' ),\n\t\t\t'add_new_item'       => __( 'Add New Contact', 'tunebridge' ),\n\t\t\t'new_item'           => __( 'New Contact', 'tunebridge' ),\n\t\t\t'edit_item'          => __( 'Edit Contact', 'tunebridge' ),\n\t\t\t'view_item'          => __( 'View Contact', 'tunebridge' ),\n\t\t\t'all_items'          => __( 'All Contacts', 'tunebridge' ),\n\t\t\t'search_items'       => __( 'Search Contacts', 'tunebridge' ),\n\t\t\t'not_found'          => __( 'No contacts found.', 'tunebridge' ),\n\t\t\t'not_found_in_trash' => __( 'No contacts found in Trash.', 'tunebridge' ),\n\t\t];\n\n\t\t$args = [\n\t\t\t'labels'          => $labels,\n\t\t\t'public'          => false,\n\t\t\t'show_ui'         => true,\n\t\t\t'show_in_menu'    => false,\n\t\t\t'capability_type' => 'post',\n\t\t\t'map_meta_cap'    => true,\n\t\t\t'supports'        => [ 'title', 'editor', 'custom-fields' ],\n\t\t\t'menu_icon'       => 'dashicons-id',\n\t\t\t'show_in_rest'    => true,\n\t\t\t'rewrite'         => false,\n\t\t];\n\n\t\tregister_post_type( 'tunebridge_contact', $args );\n\t}\n\n\tpublic static function render() {\n\t\tif ( ! current_user_can( 'view_tunebridge' ) ) {\n\t\t\twp_die( esc_html__( 'You do not have permission to view this page.', 'tunebridge' ) );\n\t\t}\n\t\t// Ensure table class present.\n\t\tif ( ! class_exists( __NAMESPACE__ . '\\\\Contacts_Table' ) ) {\n\t\t\trequire_once TUNEBRIDGE_PLUGIN_DIR . 'includes/class-contacts-table.php';\n\t\t}\n\t\t$table = new Contacts_Table();\n\n\t\tif ( isset( $_POST['_tb_contacts_nonce'] ) && wp_verify_nonce( sanitize_text_field( wp_unslash( $_POST['_tb_contacts_nonce'] ) ), 'tb_contacts_bulk' ) ) {\n\t\t\t$table->process_bulk_action();\n\t\t}\n\n\t\t$table->prepare_items();\n\n\t\t$statuses = [\n\t\t\t''        => __( 'All Statuses', 'tunebridge' ),\n\t\t\t'never'   => __( 'Never Contacted', 'tunebridge' ),\n\t\t\t'initial' => __( 'Initial Sent', 'tunebridge' ),\n\t\t\t'follow'  => __( 'Follow-up', 'tunebridge' ),\n\t\t\t'done'    => __( 'Completed', 'tunebridge' ),\n\t\t];\n\t\t$current_status = isset( $_GET['tb_status'] ) ? sanitize_text_field( wp_unslash( $_GET['tb_status'] ) ) : '';\n\n\t\t\\\\TuneBridge\\\\load_template_part( 'contacts/list.php', [\n\t\t\t'table'          => $table,\n\t\t\t'statuses'       => $statuses,\n\t\t\t'current_status' => $current_status,\n\t\t] );\n\t}\n\n\tpublic static function register_meta_boxes() {\n\t\tadd_meta_box(\n\t\t\t'tunebridge_contact_details',\n\t\t\t__( 'Contact Details', 'tunebridge' ),\n\t\t\t[ __CLASS__, 'render_meta_box' ],\n\t\t\t'tunebridge_contact',\n\t\t\t'normal',\n\t\t\t'default'\n\t\t);\n\t}\n\n\tpublic static function render_meta_box( $post ) {\n\t\t$fields = [\n\t\t\t'status'     => get_post_meta( $post->ID, '_tunebridge_status', true ),\n\t\t\t'email'      => get_post_meta( $post->ID, '_tunebridge_email', true ),\n\t\t\t'phone'      => get_post_meta( $post->ID, '_tunebridge_phone', true ),\n\t\t\t'instagram'  => get_post_meta( $post->ID, '_tunebridge_instagram', true ),\n\t\t\t'twitter'    => get_post_meta( $post->ID, '_tunebridge_twitter', true ),\n\t\t\t'spotify'    => get_post_meta( $post->ID, '_tunebridge_spotify', true ),\n\t\t];\n\t\t$statuses = [\n\t\t\t'never'   => __( 'Never Contacted', 'tunebridge' ),\n\t\t\t'initial' => __( 'Initial Sent', 'tunebridge' ),\n\t\t\t'follow'  => __( 'Follow-up', 'tunebridge' ),\n\t\t\t'done'    => __( 'Completed', 'tunebridge' ),\n\t\t];\n\t\t\\\\TuneBridge\\\\load_template_part( 'contacts/meta-box.php', [\n\t\t\t'fields'   => $fields,\n\t\t\t'statuses' => $statuses,\n\t\t\t'post'     => $post,\n\t\t] );\n\t}\n\n\tpublic static function save_post( $post_id ) {\n\t\tif ( ! isset( $_POST['tunebridge_contact_nonce'] ) || ! wp_verify_nonce( sanitize_text_field( wp_unslash( $_POST['tunebridge_contact_nonce'] ) ), 'tunebridge_save_contact' ) ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( ! current_user_can( 'edit_tunebridge_contacts', $post_id ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$fields = [\n\t\t\t'_tunebridge_status'    => sanitize_text_field( $_POST['tunebridge_status'] ?? '' ),\n\t\t\t'_tunebridge_email'     => sanitize_email( $_POST['tunebridge_email'] ?? '' ),\n\t\t\t'_tunebridge_phone'     => sanitize_text_field( $_POST['tunebridge_phone'] ?? '' ),\n\t\t\t'_tunebridge_instagram' => esc_url_raw( $_POST['tunebridge_instagram'] ?? '' ),\n\t\t\t'_tunebridge_twitter'   => esc_url_raw( $_POST['tunebridge_twitter'] ?? '' ),\n\t\t\t'_tunebridge_spotify'   => esc_url_raw( $_POST['tunebridge_spotify'] ?? '' ),\n\t\t];\n\t\tforeach ( $fields as $meta_key => $value ) {\n\t\t\tupdate_post_meta( $post_id, $meta_key, $value );\n\t\t}\n\t}\n\n\tpublic static function export_csv() {\n\t\tif ( ! current_user_can( 'export_tunebridge_contacts' ) ) {\n\t\t\twp_die( esc_html__( 'Permission denied.', 'tunebridge' ) );\n\t\t}\n\t\tif ( ! isset( $_GET['_tb_export_nonce'] ) || ! wp_verify_nonce( sanitize_text_field( wp_unslash( $_GET['_tb_export_nonce'] ) ), 'tb_export_csv' ) ) {\n\t\t\twp_die( esc_html__( 'Invalid request.', 'tunebridge' ) );\n\t\t}\n\n\t\t$status = isset( $_GET['tb_status'] ) ? sanitize_text_field( wp_unslash( $_GET['tb_status'] ) ) : '';\n\t\t$search = isset( $_GET['s'] ) ? sanitize_text_field( wp_unslash( $_GET['s'] ) ) : '';\n\n\t\t$args = [\n\t\t\t'post_type'      => 'tunebridge_contact',\n\t\t\t'post_status'    => [ 'publish', 'draft', 'pending' ],\n\t\t\t'posts_per_page' => -1,\n\t\t\t's'              => $search,\n\t\t];\n\t\tif ( $status ) {\n\t\t\t$args['meta_query'] = [ [ 'key' => '_tunebridge_status', 'value' => $status ] ];\n\t\t}\n\t\t$q = new \\WP_Query( $args );\n\n\t\t$filename = 'tunebridge-contacts-' . date_i18n( 'Ymd-His' ) . '.csv';\n\t\tnocache_headers();\n\t\theader( 'Content-Type: text/csv; charset=utf-8' );\n\t\theader( 'Content-Disposition: attachment; filename=' . $filename );\n\t\t$out = fopen( 'php://output', 'w' );\n\t\tfputcsv( $out, [ 'ID', 'Name', 'Status', 'Email', 'Phone', 'Instagram', 'Twitter', 'Spotify', 'Date' ] );\n\n\t\t$labels = [\n\t\t\t'never'   => __( 'Never Contacted', 'tunebridge' ),\n\t\t\t'initial' => __( 'Initial Sent', 'tunebridge' ),\n\t\t\t'follow'  => __( 'Follow-up', 'tunebridge' ),\n\t\t\t'done'    => __( 'Completed', 'tunebridge' ),\n\t\t];\n\n\t\tif ( $q->have_posts() ) {\n\t\t\tforeach ( $q->posts as $p ) {\n\t\t\t\t$st = get_post_meta( $p->ID, '_tunebridge_status', true );\n\t\t\t\t$em = get_post_meta( $p->ID, '_tunebridge_email', true );\n\t\t\t\t$ph = get_post_meta( $p->ID, '_tunebridge_phone', true );\n\t\t\t\t$ig = get_post_meta( $p->ID, '_tunebridge_instagram', true );\n\t\t\t\t$tw = get_post_meta( $p->ID, '_tunebridge_twitter', true );\n\t\t\t\t$sp = get_post_meta( $p->ID, '_tunebridge_spotify', true );\n\t\t\t\tfputcsv( $out, [ $p->ID, wp_strip_all_tags( get_the_title( $p ) ), isset( $labels[$st] ) ? $labels[$st] : $st, $em, $ph, $ig, $tw, $sp, get_the_time( 'Y-m-d H:i:s', $p ) ] );\n\t\t\t}\n\t\t}\n\t\tfclose( $out ); exit;\n\t}\n}\n",
  "includes/admin/Messaging.php": "<?php\n\nnamespace Tunebridge\\Admin;\n/**\n * Messaging placeholder for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Messaging {\n\tpublic static function render() {\n\t\techo '<div class=\"wrap\"><h1>' . esc_html__( 'Messaging (MVP placeholder)', 'tunebridge' ) . '</h1></div>';\n\t}\n}\n",
  "includes/admin/Settings.php": "<?php\n\nnamespace Tunebridge\\Admin;\n/**\n * Settings page and registry.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Settings {\n\n\tpublic static function init() {\n\t\tadd_action( 'admin_init', [ __CLASS__, 'register' ] );\n\t}\n\n\tpublic static function register() {\n\t\tregister_setting(\n\t\t\t'tunebridge_settings_group',\n\t\t\t'tunebridge_settings',\n\t\t\t[\n\t\t\t\t'type'              => 'array',\n\t\t\t\t'sanitize_callback' => [ __CLASS__, 'sanitize' ],\n\t\t\t\t'default'           => [\n\t\t\t\t\t'provider_spotify_enabled' => 1,\n\t\t\t\t\t'spotify_client_id'        => '',\n\t\t\t\t\t'spotify_client_secret'    => '',\n\t\t\t\t\t'default_include_tracks'   => 1,\n\t\t\t\t\t'public_dashboard'         => 0,\n\t\t\t\t\t'logging_enabled'          => 0,\n\t\t\t\t\t'allowed_roles'            => [ 'administrator' ],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tadd_settings_section( 'tb_section_providers', __( 'Providers', 'tunebridge' ), function(){ echo '<p>' . esc_html__( 'Configure provider credentials and enable/disable integrations.', 'tunebridge' ) . '</p>'; }, 'tunebridge_settings' );\n\n\t\tadd_settings_field( 'provider_spotify_enabled', __( 'Enable Spotify', 'tunebridge' ), [ __CLASS__, 'field_checkbox' ], 'tunebridge_settings', 'tb_section_providers', [ 'key' => 'provider_spotify_enabled', 'label' => __( 'Enable Spotify provider', 'tunebridge' ) ] );\n\t\tadd_settings_field( 'spotify_client_id', __( 'Spotify Client ID', 'tunebridge' ), [ __CLASS__, 'field_text' ], 'tunebridge_settings', 'tb_section_providers', [ 'key' => 'spotify_client_id' ] );\n\t\tadd_settings_field( 'spotify_client_secret', __( 'Spotify Client Secret', 'tunebridge' ), [ __CLASS__, 'field_text' ], 'tunebridge_settings', 'tb_section_providers', [ 'key' => 'spotify_client_secret' ] );\n\n\t\tadd_settings_section( 'tb_section_general', __( 'General', 'tunebridge' ), function(){ echo '<p>' . esc_html__( 'General preferences and access control.', 'tunebridge' ) . '</p>'; }, 'tunebridge_settings' );\n\n\t\tadd_settings_field( 'default_include_tracks', __( 'Include Tracks by Default', 'tunebridge' ), [ __CLASS__, 'field_checkbox' ], 'tunebridge_settings', 'tb_section_general', [ 'key' => 'default_include_tracks', 'label' => __( 'Include tracklists in playlist searches', 'tunebridge' ) ] );\n\t\tadd_settings_field( 'public_dashboard', __( 'Public Dashboard', 'tunebridge' ), [ __CLASS__, 'field_checkbox' ], 'tunebridge_settings', 'tb_section_general', [ 'key' => 'public_dashboard', 'label' => __( 'Enable public dashboard shortcode', 'tunebridge' ) ] );\n\t\tadd_settings_field( 'logging_enabled', __( 'Logging', 'tunebridge' ), [ __CLASS__, 'field_checkbox' ], 'tunebridge_settings', 'tb_section_general', [ 'key' => 'logging_enabled', 'label' => __( 'Enable basic logging', 'tunebridge' ) ] );\n\t\tadd_settings_field( 'allowed_roles', __( 'Allowed Roles', 'tunebridge' ), [ __CLASS__, 'field_roles' ], 'tunebridge_settings', 'tb_section_general', [ 'key' => 'allowed_roles' ] );\n\t}\n\n\tpublic static function sanitize( $input ) {\n\t\t$clean = [];\n\t\t$clean['provider_spotify_enabled'] = isset( $input['provider_spotify_enabled'] ) ? 1 : 0;\n\t\t$clean['spotify_client_id']        = isset( $input['spotify_client_id'] ) ? sanitize_text_field( $input['spotify_client_id'] ) : '';\n\t\t$clean['spotify_client_secret']    = isset( $input['spotify_client_secret'] ) ? sanitize_text_field( $input['spotify_client_secret'] ) : '';\n\t\t$clean['default_include_tracks']   = isset( $input['default_include_tracks'] ) ? 1 : 0;\n\t\t$clean['public_dashboard']         = isset( $input['public_dashboard'] ) ? 1 : 0;\n\t\t$clean['logging_enabled']          = isset( $input['logging_enabled'] ) ? 1 : 0;\n\n\t\t$roles                  = isset( $input['allowed_roles'] ) && is_array( $input['allowed_roles'] ) ? array_map( 'sanitize_text_field', $input['allowed_roles'] ) : [];\n\t\t$valid_roles            = array_keys( wp_roles()->roles );\n\t\t$clean['allowed_roles'] = array_values( array_intersect( $roles, $valid_roles ) );\n\n\t\treturn $clean;\n\t}\n\n\tpublic static function field_checkbox( $args ) {\n\t\t$opts = get_option( 'tunebridge_settings', [] );\n\t\t$key  = $args['key']; $val = ! empty( $opts[ $key ] ) ? 1 : 0; $lbl = isset( $args['label'] ) ? $args['label'] : '';\n\t\t?><label><input type=\"checkbox\" name=\"tunebridge_settings[<?php echo esc_attr( $key ); ?>]\" value=\"1\" <?php checked( $val, 1 ); ?> /> <?php echo esc_html( $lbl ); ?></label><?php\n\t}\n\n\tpublic static function field_text( $args ) {\n\t\t$opts = get_option( 'tunebridge_settings', [] ); $key = $args['key']; $val = isset( $opts[ $key ] ) ? $opts[ $key ] : '';\n\t\t?><input type=\"text\" class=\"regular-text\" name=\"tunebridge_settings[<?php echo esc_attr( $key ); ?>]\" value=\"<?php echo esc_attr( $val ); ?>\" /><?php\n\t}\n\n\tpublic static function field_roles( $args ) {\n\t\t$opts = get_option( 'tunebridge_settings', [] ); $selected = isset( $opts['allowed_roles'] ) ? (array) $opts['allowed_roles'] : [];\n\t\t$all_roles = wp_roles()->roles;\n\t\t?><select name=\"tunebridge_settings[allowed_roles][]\" multiple size=\"5\"><?php foreach ( $all_roles as $role_key => $role_data ) : ?><option value=\"<?php echo esc_attr( $role_key ); ?>\" <?php selected( in_array( $role_key, $selected, true ) ); ?>><?php echo esc_html( $role_data['name'] ); ?></option><?php endforeach; ?></select><p class=\"description\"><?php esc_html_e( 'Users with any selected role will be allowed to use TuneBridge features.', 'tunebridge' ); ?></p><?php\n\t}\n\n\tpublic static function render() {\n\t\tif ( ! current_user_can( 'manage_tunebridge_settings' ) ) {\n\t\t\twp_die( esc_html__( 'You do not have permission to manage settings.', 'tunebridge' ) );\n\t\t}\n\t\t?><div class=\"wrap\"><h1><?php esc_html_e( 'TuneBridge Settings', 'tunebridge' ); ?></h1><form action=\"options.php\" method=\"post\"><?php settings_fields( 'tunebridge_settings_group' ); do_settings_sections( 'tunebridge_settings' ); submit_button(); ?></form></div><?php\n\t}\n}\n",
  "includes/admin/ContactsTable.php": "<?php\n\nnamespace Tunebridge\\Admin;\n/**\n * WP_List_Table implementation for TuneBridge Contacts.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( ! class_exists( '\\\\WP_List_Table' ) ) {\n\trequire_once ABSPATH . 'wp-admin/includes/class-wp-list-table.php';\n}\n\nclass Contacts_Table extends \\WP_List_Table {\n\n\tprotected $status_filter = '';\n\n\tpublic function __construct() {\n\t\tparent::__construct( [ 'singular' => 'tunebridge_contact', 'plural' => 'tunebridge_contacts', 'ajax' => false ] );\n\t\t$this->status_filter = isset( $_GET['tb_status'] ) ? sanitize_text_field( wp_unslash( $_GET['tb_status'] ) ) : '';\n\t}\n\n\tpublic function get_columns() {\n\t\treturn [\n\t\t\t'cb'        => '<input type=\"checkbox\" />',\n\t\t\t'title'     => __( 'Name', 'tunebridge' ),\n\t\t\t'status'    => __( 'Status', 'tunebridge' ),\n\t\t\t'email'     => __( 'Email', 'tunebridge' ),\n\t\t\t'instagram' => __( 'Instagram', 'tunebridge' ),\n\t\t\t'spotify'   => __( 'Spotify', 'tunebridge' ),\n\t\t\t'date'      => __( 'Date', 'tunebridge' ),\n\t\t];\n\t}\n\n\tprotected function get_sortable_columns() {\n\t\treturn [ 'title' => [ 'title', false ], 'status' => [ 'status', false ], 'date' => [ 'date', false ] ];\n\t}\n\n\tprotected function get_bulk_actions() {\n\t\treturn [\n\t\t\t'trash'        => __( 'Move to Trash', 'tunebridge' ),\n\t\t\t'mark_never'   => __( 'Mark: Never Contacted', 'tunebridge' ),\n\t\t\t'mark_initial' => __( 'Mark: Initial Sent', 'tunebridge' ),\n\t\t\t'mark_follow'  => __( 'Mark: Follow-up', 'tunebridge' ),\n\t\t\t'mark_done'    => __( 'Mark: Completed', 'tunebridge' ),\n\t\t];\n\t}\n\n\tpublic function process_bulk_action() {\n\t\t$action = $this->current_action();\n\t\tif ( empty( $action ) ) return;\n\t\t$ids = isset( $_REQUEST['contact'] ) ? (array) $_REQUEST['contact'] : [];\n\t\t$ids = array_map( 'absint', $ids );\n\t\tif ( empty( $ids ) ) return;\n\n\t\tswitch ( $action ) {\n\t\t\tcase 'trash':\n\t\t\t\tforeach ( $ids as $id ) { if ( current_user_can( 'delete_post', $id ) ) { wp_trash_post( $id ); } }\n\t\t\t\tbreak;\n\t\t\tcase 'mark_never':\n\t\t\tcase 'mark_initial':\n\t\t\tcase 'mark_follow':\n\t\t\tcase 'mark_done':\n\t\t\t\t$status_map = [ 'mark_never' => 'never', 'mark_initial' => 'initial', 'mark_follow' => 'follow', 'mark_done' => 'done' ];\n\t\t\t\t$new_status = isset( $status_map[ $action ] ) ? $status_map[ $action ] : '';\n\t\t\t\tif ( $new_status ) {\n\t\t\t\t\tforeach ( $ids as $id ) { if ( current_user_can( 'edit_post', $id ) ) { update_post_meta( $id, '_tunebridge_status', $new_status ); } }\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected function column_cb( $item ) {\n\t\treturn sprintf( '<input type=\"checkbox\" name=\"contact[]\" value=\"%d\" />', absint( $item->ID ) );\n\t}\n\n\tprotected function column_title( $item ) {\n\t\t$edit_link = get_edit_post_link( $item->ID );\n\t\t$title     = get_the_title( $item->ID );\n\t\t$view_link = get_permalink( $item->ID );\n\t\t$trash_link = get_delete_post_link( $item->ID, '', true );\n\t\t$actions = [];\n\t\tif ( $edit_link ) { $actions['edit'] = sprintf( '<a href=\"%s\">%s</a>', esc_url( $edit_link ), esc_html__( 'Edit', 'tunebridge' ) ); }\n\t\tif ( $trash_link && current_user_can( 'delete_post', $item->ID ) ) { $actions['trash'] = sprintf( '<a href=\"%s\">%s</a>', esc_url( $trash_link ), esc_html__( 'Trash', 'tunebridge' ) ); }\n\t\tif ( $view_link ) { $actions['view'] = sprintf( '<a href=\"%s\" target=\"_blank\" rel=\"noopener noreferrer\">%s</a>', esc_url( $view_link ), esc_html__( 'View', 'tunebridge' ) ); }\n\t\treturn sprintf( '<strong><a class=\"row-title\" href=\"%s\">%s</a></strong> %s', esc_url( $edit_link ), esc_html( $title ), $this->row_actions( $actions ) );\n\t}\n\n\tpublic function column_default( $item, $column_name ) {\n\t\tswitch ( $column_name ) {\n\t\t\tcase 'status':\n\t\t\t\t$val = get_post_meta( $item->ID, '_tunebridge_status', true );\n\t\t\t\t$statuses = [ 'never' => __( 'Never Contacted', 'tunebridge' ), 'initial' => __( 'Initial Sent', 'tunebridge' ), 'follow' => __( 'Follow-up', 'tunebridge' ), 'done' => __( 'Completed', 'tunebridge' ) ];\n\t\t\t\treturn isset( $statuses[$val] ) ? esc_html( $statuses[$val] ) : '&mdash;';\n\t\t\tcase 'email':\n\t\t\t\t$email = get_post_meta( $item->ID, '_tunebridge_email', true );\n\t\t\t\treturn $email ? sprintf( '<a href=\"%1$s\">%2$s</a>', esc_url( 'mailto:' . $email ), esc_html( $email ) ) : '&mdash;';\n\t\t\tcase 'instagram':\n\t\t\t\t$ig = get_post_meta( $item->ID, '_tunebridge_instagram', true );\n\t\t\t\treturn $ig ? sprintf( '<a href=\"%1$s\" target=\"_blank\" rel=\"noopener noreferrer\">%2$s</a>', esc_url( $ig ), esc_html( $ig ) ) : '&mdash;';\n\t\t\tcase 'spotify':\n\t\t\t\t$sp = get_post_meta( $item->ID, '_tunebridge_spotify', true );\n\t\t\t\treturn $sp ? sprintf( '<a href=\"%1$s\" target=\"_blank\" rel=\"noopener noreferrer\">%2$s</a>', esc_url( $sp ), esc_html( $sp ) ) : '&mdash;';\n\t\t\tcase 'date':\n\t\t\t\treturn esc_html( get_the_time( get_option( 'date_format' ), $item ) );\n\t\t\tdefault:\n\t\t\t\treturn '&mdash;';\n\t\t}\n\t}\n\n\tpublic function prepare_items() {\n\t\t$per_page = 20; $current_page = $this->get_pagenum();\n\t\t$orderby = isset( $_GET['orderby'] ) ? sanitize_key( wp_unslash( $_GET['orderby'] ) ) : 'date';\n\t\t$order   = isset( $_GET['order'] ) ? sanitize_key( wp_unslash( $_GET['order'] ) ) : 'desc';\n\n\t\t$args = [\n\t\t\t'post_type'      => 'tunebridge_contact',\n\t\t\t'post_status'    => [ 'publish', 'draft', 'pending' ],\n\t\t\t'posts_per_page' => $per_page,\n\t\t\t'paged'          => $current_page,\n\t\t\t'orderby'        => $orderby === 'status' ? 'meta_value' : $orderby,\n\t\t\t'order'          => $order,\n\t\t];\n\n\t\t$meta_query = [];\n\t\tif ( $this->status_filter ) {\n\t\t\t$meta_query[] = [ 'key' => '_tunebridge_status', 'value' => $this->status_filter ];\n\t\t}\n\t\tif ( ! empty( $meta_query ) ) { $args['meta_query'] = $meta_query; $args['meta_key'] = '_tunebridge_status'; $args['meta_type'] = 'CHAR'; }\n\n\t\tif ( ! empty( $_REQUEST['s'] ) ) { $args['s'] = sanitize_text_field( wp_unslash( $_REQUEST['s'] ) ); }\n\n\t\t$query = new \\WP_Query( $args );\n\t\t$this->items = $query->posts;\n\t\t$this->set_pagination_args( [ 'total_items' =>  (int) $query->found_posts, 'per_page' => $per_page, 'total_pages' => int( $query->max_num_pages ) ] )\n\t\tself::_set_headers();\n\t}\n\n\tprotected function _set_headers(){\n\t\t$this->_column_headers = [ $this->get_columns(), [], $this->get_sortable_columns(), 'title' ];\n\t}\n}\n",
  "includes/admin/Blocks/BlockManager.php": "<?php\n\nnamespace Tunebridge\\Admin\\Blocks;\n/**\n * Blocks system placeholder for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Blocks {\n\t// Reserved for future modular dashboard blocks.\n}\n",
  "includes/admin/pages/Settings_Page.php": "<?php\n\nnamespace Tunebridge\\Admin\\Pages;\n\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * Settings Page for TuneBridge.\n */\nclass Settings_Page {\n\n\t/**\n\t * Register settings.\n\t */\n\tpublic static function register() {\n\t\tadd_settings_section(\n\t\t\t'tunebridge_api_section',\n\t\t\t__( 'API Credentials', 'tunebridge' ),\n\t\t\tfunction () {\n\t\t\t\techo '<p>' . esc_html__( 'Enter your Spotify API credentials here.', 'tunebridge' ) . '</p>';\n\t\t\t},\n\t\t\t'tunebridge_settings'\n\t\t);\n\n\t\tadd_settings_field(\n\t\t\t'tunebridge_spotify_client_id',\n\t\t\t__( 'Spotify Client ID', 'tunebridge' ),\n\t\t\tfunction () {\n\t\t\t\t$value = esc_attr( get_option( 'tunebridge_spotify_client_id', '' ) );\n\t\t\t\techo '<input type=\"text\" name=\"tunebridge_spotify_client_id\" value=\"' . $value . '\" class=\"regular-text\">';\n\t\t\t},\n\t\t\t'tunebridge_settings',\n\t\t\t'tunebridge_api_section'\n\t\t);\n\n\t\tadd_settings_field(\n\t\t\t'tunebridge_spotify_client_secret',\n\t\t\t__( 'Spotify Client Secret', 'tunebridge' ),\n\t\t\tfunction () {\n\t\t\t\t$value = esc_attr( get_option( 'tunebridge_spotify_client_secret', '' ) );\n\t\t\t\techo '<input type=\"password\" name=\"tunebridge_spotify_client_secret\" value=\"' . $value . '\" class=\"regular-text\">';\n\t\t\t},\n\t\t\t'tunebridge_settings',\n\t\t\t'tunebridge_api_section'\n\t\t);\n\n\t\tregister_setting( 'tunebridge_settings', 'tunebridge_spotify_client_id' );\n\t\tregister_setting( 'tunebridge_settings', 'tunebridge_spotify_client_secret' );\n\n\t\t// Developer section for toggling mock data\n\t\tadd_settings_section(\n\t\t\t'tunebridge_dev_section',\n\t\t\t__( 'Developer Settings', 'tunebridge' ),\n\t\t\tfunction () {\n\t\t\t\techo '<p>' . esc_html__( 'Development options for testing TuneBridge plugin features.', 'tunebridge' ) . '</p>';\n\t\t\t},\n\t\t\t'tunebridge_settings'\n\t\t);\n\n\t\tadd_settings_field(\n\t\t\t'tunebridge_use_mock_data',\n\t\t\t__( 'Use Mock Data', 'tunebridge' ),\n\t\t\tfunction () {\n\t\t\t\t$value = get_option( 'tunebridge_use_mock_data', false );\n\t\t\t\techo '<label><input type=\"checkbox\" name=\"tunebridge_use_mock_data\" value=\"1\" ' . checked( 1, $value, false ) . '> ' . esc_html__( 'Enable stub data responses instead of live API', 'tunebridge' ) . '</label>';\n\t\t\t},\n\t\t\t'tunebridge_settings',\n\t\t\t'tunebridge_dev_section'\n\t\t);\n\n\t\tregister_setting( 'tunebridge_settings', 'tunebridge_use_mock_data' );\n\t}\n\n\t/**\n\t * Render settings page.\n\t */\n\tpublic static function render() {\n\t\t?>\n\t\t<div class=\"wrap\">\n\t\t\t<h1><?php esc_html_e( 'TuneBridge Settings', 'tunebridge' ); ?></h1>\n\t\t\t<form method=\"post\" action=\"options.php\">\n\t\t\t\t<?php\n\t\t\t\tsettings_fields( 'tunebridge_settings' );\n\t\t\t\tdo_settings_sections( 'tunebridge_settings' );\n\t\t\t\tsubmit_button();\n\t\t\t\t?>\n\t\t\t</form>\n\t\t</div>\n\t\t<?php\n\t}\n}\n",
  "includes/core/Roles.php": "<?php\n\nnamespace Tunebridge\\Core;\n/**\n * Roles & capabilities for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Roles {\n\n\tpublic static function caps_map() {\n\t\treturn [ 'manage_tunebridge', 'view_tunebridge', 'edit_tunebridge_contacts', 'export_tunebridge_contacts', 'manage_tunebridge_settings', 'use_tunebridge_providers' ];\n\t}\n\n\tpublic static function add_caps() {\n\t\t$role = get_role( 'administrator' ); if ( ! $role ) return;\n\t\tforeach ( self::caps_map() as $cap ) { $role->add_cap( $cap ); }\n\t}\n\n\tpublic static function remove_caps() {\n\t\t$roles = wp_roles(); if ( ! $roles ) return;\n\t\tforeach ( $roles->roles as $role_key => $role_data ) {\n\t\t\t$role = get_role( $role_key ); if ( ! $role ) continue;\n\t\t\tforeach ( self::caps_map() as $cap ) { $role->remove_cap( $cap ); }\n\t\t}\n\t}\n}\n",
  "includes/core/Services.php": "<?php\n\nnamespace Tunebridge\\Core;\n/**\n * Provider service registry for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Services {\n\n\tprotected static $providers = [];\n\n\tpublic static function register( $key, $instance ) {\n\t\tself::$providers[ $key ] = $instance;\n\t}\n\n\tpublic static function provider( $key ) {\n\t\treturn isset( self::$providers[ $key ] ) ? self::$providers[ $key ] : null;\n\t}\n\n\tpublic static function is_enabled( $key ) {\n\t\t$opts = get_option( 'tunebridge_settings', [] );\n\t\tswitch ( $key ) {\n\t\t\tcase 'spotify':\n\t\t\t\treturn ! empty( $opts['provider_spotify_enabled'] );\n\t\t}\n\t\treturn false;\n\t}\n}\n",
  "includes/core/Plugin.php": "<?php\nnamespace Tunebridge\\Core;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Plugin {\n\n\t/**\n\t * Plugin version.\n\t */\n\tconst VERSION = '1.0.9';\n\n\t/**\n\t * Initialize core plugin constants.\n\t */\n\tpublic static function init() {\n\t\tdefine( 'TUNEBRIDGE_VERSION', self::VERSION );\n\t\tdefine( 'TUNEBRIDGE_PATH', plugin_dir_path( __FILE__ ) . '../../' );\n\t\tdefine( 'TUNEBRIDGE_URL', plugin_dir_url( __FILE__ ) . '../../' );\n\t\tdefine( 'TUNEBRIDGE_PLUGIN_FILE', TUNEBRIDGE_PATH . 'tunebridge.php' );\n\t}\n}\n",
  "includes/core/Autoloader.php": "<?php\nnamespace Tunebridge\\Core;\n\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * Simple PSR-4-style autoloader for the Tunebridge plugin.\n */\nclass Autoloader {\n\n\t/**\n\t * Register the autoloader.\n\t */\n\tpublic static function register() {\n\t\tspl_autoload_register( [ __CLASS__, 'autoload' ] );\n\t}\n\n\t/**\n\t * Autoload class files based on namespace.\n\t *\n\t * @param string $class Class name with namespace.\n\t */\n\tpublic static function autoload( $class ) {\n\t\t// Only autoload Tunebridge classes.\n\t\tif ( strpos( $class, 'Tunebridge\\\\' ) !== 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove base namespace.\n\t\t$relative_class = substr( $class, strlen( 'Tunebridge\\\\' ) );\n\n\t\t// Convert namespace to path.\n\t\t$path = plugin_dir_path( __FILE__ ) . '../' . str_replace( '\\\\', '/', $relative_class ) . '.php';\n\n\t\tif ( file_exists( $path ) ) {\n\t\t\trequire_once $path;\n\t\t}\n\t}\n}\n",
  "includes/shortcodes/DashboardShortcode.php": "<?php\n\nnamespace Tunebridge\\Shortcodes;\n/**\n * Shortcodes for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Shortcodes {\n\n\tpublic static function register_shortcodes() {\n\t\tadd_shortcode( 'tunebridge_dashboard', [ __CLASS__, 'dashboard_shortcode' ] );\n\t}\n\n\tpublic static function dashboard_shortcode( $atts ) {\n\t\tob_start();\n\t\techo '<div class=\"tunebridge-dashboard-shortcode\">';\n\t\t\\TuneBridge\\load_template_part( 'dashboard.php' );\n\t\techo '</div>';\n\t\treturn ob_get_clean();\n\t}\n}\n",
  "includes/rest/ContactsEndpoint.php": "<?php\n\nnamespace Tunebridge\\Rest;\n/**\n * REST API for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\nuse WP_REST_Server;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass REST {\n\n\tpublic static function init() {\n\t\tadd_action( 'rest_api_init', [ __CLASS__, 'register_routes' ] );\n\t}\n\n\tprotected static function validate_request( $request ) {\n\t\tif ( ! is_user_logged_in() ) { return new \\WP_Error( 'tb_rest_auth', __( 'Authentication required.', 'tunebridge' ), [ 'status' => 401 ] ); }\n\t\tif ( ! current_user_can( 'view_tunebridge' ) ) { return new \\WP_Error( 'tb_rest_cap', __( 'Insufficient permissions.', 'tunebridge' ), [ 'status' => 403 ] ); }\n\t\treturn true;\n\t}\n\n\tpublic static function register_routes() {\n\t\tregister_rest_route( 'tunebridge/v1', '/search/playlists', [\n\t\t\t'methods' => WP_REST_Server::READABLE,\n\t\t\t'callback' => [ __CLASS__, 'search_playlists' ],\n\t\t\t'permission_callback' => function( $request ){ return self::validate_request( $request ); },\n\t\t\t'args' => [ 'q' => [ 'type' => 'string', 'required' => true, 'sanitize_callback' => 'sanitize_text_field' ] ],\n\t\t] );\n\t\tregister_rest_route( 'tunebridge/v1', '/search/artists', [\n\t\t\t'methods' => WP_REST_Server::READABLE,\n\t\t\t'callback' => [ __CLASS__, 'search_artists' ],\n\t\t\t'permission_callback' => function( $request ){ return self::validate_request( $request ); },\n\t\t\t'args' => [ 'q' => [ 'type' => 'string', 'required' => true, 'sanitize_callback' => 'sanitize_text_field' ] ],\n\t\t] );\n\t}\n\n\tpublic static function search_playlists( $request ) {\n\t\tif ( ! Services::is_enabled( 'spotify' ) ) { return rest_ensure_response( [] ); }\n\t\t$prov = Services::provider( 'spotify' ); if ( ! $prov ) { return rest_ensure_response( [] ); }\n\t\t$q = (string) $request->get_param( 'q' );\n\t\treturn rest_ensure_response( $prov->search_playlists( $q ) );\n\t}\n\n\tpublic static function search_artists( $request ) {\n\t\tif ( ! Services::is_enabled( 'spotify' ) ) { return rest_ensure_response( [] ); }\n\t\t$prov = Services::provider( 'spotify' ); if ( ! $prov ) { return rest_ensure_response( [] ); }\n\t\t$q = (string) $request->get_param( 'q' );\n\t\treturn rest_ensure_response( $prov->search_artists( $q ) );\n\t}\n}\n",
  "includes/cli/CLI.php": "<?php\nnamespace Tunebridge\\CLI;\n\nuse WP_CLI;\nuse Tunebridge\\Core\\Plugin;\n\nif ( ! class_exists( '\\WP_CLI' ) ) {\n\treturn;\n}\n\n/**\n * TuneBridge CLI commands.\n */\nclass CLI {\n\n\t/**\n\t * Register CLI commands.\n\t */\n\tpublic static function register() {\n\t\tWP_CLI::add_command( 'tunebridge version', [ __CLASS__, 'version_command' ] );\n\t}\n\n\t/**\n\t * Handle version commands.\n\t *\n\t * ## OPTIONS\n\t *\n\t * get\n\t * : Show the current plugin version.\n\t *\n\t * bump <type>\n\t * : Bump the plugin version. <type> must be: patch, minor, or major.\n\t *\n\t * ## EXAMPLES\n\t *     wp tunebridge version get\n\t *     wp tunebridge version bump minor\n\t *\n\t * @when after_wp_load\n\t */\n\tpublic static function version_command( $args ) {\n\t\t$subcommand = $args[0] ?? 'get';\n\n\t\tif ( 'get' === $subcommand ) {\n\t\t\tWP_CLI::success( 'TuneBridge version: ' . Plugin::VERSION );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'bump' === $subcommand && isset( $args[1] ) ) {\n\t\t\t$type = $args[1];\n\n\t\t\t$version_parts = explode( '.', Plugin::VERSION );\n\t\t\tlist( $major, $minor, $patch ) = array_map( 'intval', $version_parts );\n\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase 'patch':\n\t\t\t\t\t$patch++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'minor':\n\t\t\t\t\t$minor++;\n\t\t\t\t\t$patch = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'major':\n\t\t\t\t\t$major++;\n\t\t\t\t\t$minor = $patch = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tWP_CLI::error( 'Invalid bump type. Use patch, minor, or major.' );\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$new_version = \"{$major}.{$minor}.{$patch}\";\n\t\t\tWP_CLI::success( \"New version (not saved to file): {$new_version}\" );\n\t\t\t// NOTE: Auto-saving to file requires parsing and writing Plugin.php \u2014 left out for safety.\n\t\t} else {\n\t\t\tWP_CLI::error( 'Invalid command. Use \"get\" or \"bump <type>\".' );\n\t\t}\n\t}\n}\n",
  "includes/helpers/functions.php": "<?php\n\nnamespace Tunebridge\\Helpers;\n/**\n * Helpers for TuneBridge.\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge;\n\ndefined( 'ABSPATH' ) || exit;\n\nfunction load_template_part( $relative_path, $vars = [] ) {\n\t$file = trailingslashit( TUNEBRIDGE_PLUGIN_DIR ) . 'templates/' . ltrim( $relative_path, '/' );\n\tif ( ! file_exists( $file ) ) { return; }\n\tif ( is_array( $vars ) ) { extract( $vars, EXTR_SKIP ); } // phpcs:ignore WordPress.PHP.DontExtract\n\tinclude $file;\n}\n\nfunction user_has_allowed_role() {\n\t$opts = get_option( 'tunebridge_settings', [] );\n\t$roles = isset( $opts['allowed_roles'] ) ? (array) $opts['allowed_roles'] : [];\n\t$user = wp_get_current_user();\n\treturn (bool) array_intersect( $roles, (array) $user->roles );\n}\n",
  "includes/data/Mock_Data.php": "<?php\n\nnamespace Tunebridge\\Data;\n\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * Provides mock data for dev/testing mode.\n */\nclass Mock_Data {\n\n\tpublic static function get_playlists() {\n\t\treturn [\n\t\t\t[\n\t\t\t\t'id'        => '123',\n\t\t\t\t'name'      => 'Indie Vibes',\n\t\t\t\t'curator'   => 'IndieWave',\n\t\t\t\t'tracks'    => 48,\n\t\t\t\t'followers' => 2543,\n\t\t\t\t'url'       => 'https://open.spotify.com/playlist/123',\n\t\t\t],\n\t\t\t[\n\t\t\t\t'id'        => '456',\n\t\t\t\t'name'      => 'Lo-Fi Chill',\n\t\t\t\t'curator'   => 'ChillHop',\n\t\t\t\t'tracks'    => 73,\n\t\t\t\t'followers' => 45210,\n\t\t\t\t'url'       => 'https://open.spotify.com/playlist/456',\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic static function get_artists() {\n\t\treturn [\n\t\t\t[\n\t\t\t\t'id'      => 'abc123',\n\t\t\t\t'name'    => 'The Echo Project',\n\t\t\t\t'genre'   => 'Alt Rock',\n\t\t\t\t'country' => 'US',\n\t\t\t\t'spotify' => 'https://open.spotify.com/artist/abc123',\n\t\t\t],\n\t\t\t[\n\t\t\t\t'id'      => 'def456',\n\t\t\t\t'name'    => 'Skybound',\n\t\t\t\t'genre'   => 'Electronic',\n\t\t\t\t'country' => 'UK',\n\t\t\t\t'spotify' => 'https://open.spotify.com/artist/def456',\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic static function get_contact_card( $id = null ) {\n\t\treturn [\n\t\t\t'id'     => $id ?? 1,\n\t\t\t'name'   => 'Alex Johnson',\n\t\t\t'email'  => 'alex@example.com',\n\t\t\t'status' => 'Follow-Up',\n\t\t\t'source' => 'Spotify',\n\t\t\t'meta'   => [\n\t\t\t\t'platforms' => [ 'Spotify', 'Apple Music' ],\n\t\t\t\t'socials'   => [ 'twitter' => '@alexj' ],\n\t\t\t\t'notes'     => [ 'Loves indie pop', 'Based in NYC' ],\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic static function get_messages() {\n\t\treturn [\n\t\t\t[\n\t\t\t\t'id'      => 1,\n\t\t\t\t'label'   => 'Initial Contact',\n\t\t\t\t'tags'    => [ 'initial' ],\n\t\t\t\t'content' => 'Hey {{name}}, I found your playlist and thought our track might be a good fit...',\n\t\t\t],\n\t\t\t[\n\t\t\t\t'id'      => 2,\n\t\t\t\t'label'   => 'Follow-Up',\n\t\t\t\t'tags'    => [ 'followup' ],\n\t\t\t\t'content' => 'Just following up on my previous message...',\n\t\t\t],\n\t\t];\n\t}\n\n\tpublic static function get_notes() {\n\t\treturn [\n\t\t\t[\n\t\t\t\t'id'   => 1,\n\t\t\t\t'type' => 'search',\n\t\t\t\t'note'=> 'Looked up \"Indie Electro\" playlists today.',\n\t\t\t\t'date'=> '2025-09-17',\n\t\t\t],\n\t\t\t[\n\t\t\t\t'id'   => 2,\n\t\t\t\t'type' => 'artist',\n\t\t\t\t'note'=> 'Found 3 promising artists in \"Lo-Fi Chill\" playlist.',\n\t\t\t\t'date'=> '2025-09-17',\n\t\t\t],\n\t\t];\n\t}\n}\n",
  "templates/dashboard.php": "<div class=\"tunebridge-dashboard\">\n\n<div class=\"tunefarm_artistaccess\">\n<!-- TFAA -->\n<!-- FEATURED PLAYLIST SECTION -->\n<!-- This section contains FEATURED PLAYLISTs returned from music platform API calls. -->\n<div class=\"container p-4 section\" id=\"tfaa__all-featured-playlists\">\n<div class=\"all-featured-playlist-section-header\">\n<h2 class=\"featured-playlist-headline\">Current Popular Platform Playlists</h2>\n</div>\n<!-- SPOTIFY -->\n<!-- This is for the SPOTIFY FEATURED PLAYLIST popular playlists results as returned from the API. -->\n<!-- GET /v1/browse/featured-playlists -->\n<!-- https://developer.spotify.com/documentation/web-api/reference/get-featured-playlists -->\n<div class=\"spotify-api-get platform featured-playlist\" id=\"spotify-featured-playlists\">\n<div class=\"featured-playlist-head\">\n<h3 class=\"featured-playlist-subheadline\">Trending on Spotify</h3>\n</div>\n<!-- This row contains X cards per row in a horizontal layout. If more than X cards a new row is started. -->\n<div class=\"d-flex flex-wrap\">\n<!-- The returned data from spotify has an array of objects (playlists.items[]), these are iterated over and the featured-playlist-item below is created. -->\n<!-- This is the featured playlist item card column wrapper.  -->\n<!-- The id of the div below will be a combination of featured_playlist_spotify__ and the playlist uri returned from the Spotify API [playlists.items[0].uri] -->\n<div class=\"flex-grow-0 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<!-- This is a featured playlist item card. -->\n<div class=\"card spotify\">\n<!-- Featured playlist item card image. -->\n<!-- Object Properties ... URL: playlists.items[].images[].url | HEIGHT: playlists.items[].images[].height | WIDTH: playlists.items[].images[].width -->\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<!-- featured playlist card body -->\n<div class=\"card-body\">\n<!-- featured playlist contextual data -->\n<!-- Object Properties ... TOTAL TRACKS IN PLAYLIST: playlists.items[0].tracks.total -->\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<!-- featured playlist item playlist track number of tracks -->\n<span class=\"track-count\">\n<span>000 TRACKS</span>\n</span>\n<!-- featured playlist platfrom indication -->\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<!-- featured playlist name -->\n<!-- Object Properties ... PLAYLIST NAME: playlist.items[0].name | PLAYLIST URL: playlist.items[0].href -->\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<!-- featured playlist curator name -->\n<!-- Object Properties ... OWNER DISPLAY NAME: playlists.items[0].owner.display_name | OWNER HREF: playlists.items[0].owner.href -->\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<!-- featured playlist card footer -->\n<div class=\"card-footer\">\n<!-- This card footer cotains featured playlist quick links.  -->\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n<!-- end card -->\n</div>\n<!-- end flex-fill -->\n<!-- [ foreach ]... more flex-fill.card here ... -->\n<div class=\"flex-grow-0 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<div class=\"card spotify\">\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<div class=\"card-body\">\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<span class=\"track-count\">000 TRACKS</span>\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<div class=\"card-footer\">\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n</div>\n<div class=\"flex-grow-0 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<div class=\"card spotify\">\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<div class=\"card-body\">\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<span class=\"track-count\">000 TRACKS</span>\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<div class=\"card-footer\">\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n</div>\n<div class=\"flex-grow-0 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<div class=\"card spotify\">\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<div class=\"card-body\">\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<span class=\"track-count\">000 TRACKS</span>\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<div class=\"card-footer\">\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n</div>\n<div class=\"flex-grow-0 col-xs-6 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<div class=\"card spotify\">\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<div class=\"card-body\">\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<span class=\"track-count\">000 TRACKS</span>\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<div class=\"card-footer\">\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n</div>\n<div class=\"flex-grow-0 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<div class=\"card spotify\">\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<div class=\"card-body\">\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<span class=\"track-count\">000 TRACKS</span>\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<div class=\"card-footer\">\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n</div>\n<div class=\"flex-grow-0 col-xs-6 col-sm-6 col-md-4 col-lg-3 featured-playlist-item\" id=\"featured-playlist-spotify__[uri]\">\n<div class=\"card spotify\">\n<img alt=\"Featured Playlist Name or Title\" class=\"card-img-top featured-playlist-image\" onerror=\"this.onerror=null; this.src='https://placehold.co/600x400?text=Image+Unavailable'\" src=\"https://picsum.photos/300/200?grayscale\"/>\n<div class=\"card-body\">\n<div class=\"featured-playlist-context-info d-flex justify-content-between\">\n<span class=\"track-count\">000 TRACKS</span>\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</div>\n<h5 class=\"card-title featured-playlist-title\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Name\n                    </a>\n</h5>\n<p class=\"card-text small featured-playlist-curator\">\n<a class=\"text-reset text-decoration-none\" href=\"#\">\n                      Owner / Curator\n                    </a>\n</p>\n</div>\n<div class=\"card-footer\">\n<p class=\"featured-playlist-footer-title\">Quick View</p>\n<div class=\"featured-playlist-quick-links d-flex justify-content-start align-items-center\">\n<a class=\"btn btn-primary btn-sm featured-playlist-button-goto-curator\" href=\"#\" role=\"button\">\n                      Curator\n                    </a>\n<a class=\"btn btn-secondary btn-sm featured-playlist-button-goto-playlist\" href=\"#\" role=\"button\">\n                      Playlist\n                    </a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<!-- end row -->\n</div>\n<!-- end platform -->\n</div>\n<!-- end section -->\n<!-- SEARCH FOR PLAYLIST BY NAME OR BY CURATOR SECTION -->\n<!-- This section contains an input field, you can a curator name or playlist name, radio boxes let you toggle which search you are performing, radio buttons alos let you toggle platforms you are searching. -->\n<!-- The return will be from whichever platform is being searched, a lists of playlists rendered in the results section as cards -->\n<div class=\"container p-4 section\" id=\"tfaa__search-platform\">\n<div class=\"search-platform-header\">\n<h2 class=\"search-platform-headline\">ACCESS ARTISTS</h2>\n</div>\n<div class=\"search-platform\">\n<div class=\"search-platform-subheader\">\n<h3 class=\"search-platform-request-subheadline\">DISCOVERY</h3>\n</div>\n<div class=\"search-platform-request\">\n<form class=\"platform-search p-4\">\n<!-- This radio input indicates one of two types of searches, public playlists by name and public playlists owned by a certain curator or owner -->\n<!-- GET PLAYLISTS BY PLAYLIST NAME : SPOTIFY SEARCH API -->\n<!-- In the case of a spotify playlist by name an example request looks something like this. GET https://api.spotify.com/v1/search?q=YourPlaylistName&type=playlist -->\n<!-- GET PLAYLISTS BY CURATOR NAME : SPOTIFY WEB API -->\n<!-- In the case of a spotify playlist by curator name an example request looks something like this. GET https://api.spotify.com/v1/users/exampleuser123/playlists?limit=50 -->\n<!-- If get_named_playlist is checked and value is not set to False, then it indicates that a get playlists by playlist name is requested. -->\n<!-- If get_curator_playlists is checked and value is not set to False, then it indicates that a get playlists by curator is requested. -->\n<div class=\"form-group row platform-search-type\">\n<label class=\"col-2\">What Search Type?</label>\n<div class=\"col-10\">\n<div class=\"custom-control custom-radio custom-control-inline\">\n<input aria-describedby=\"platform-search-typeHelpBlock\" checked=\"\" class=\"custom-control-input\" id=\"platform-search-type_0\" name=\"platform-search-type\" type=\"radio\" value=\"get_named_playlist\"/>\n<label class=\"custom-control-label\" for=\"platform-search-type_0\">Playlist(s)</label>\n</div>\n<div class=\"custom-control custom-radio custom-control-inline platform-search-type\">\n<input aria-describedby=\"platform-search-typeHelpBlock\" class=\"custom-control-input\" id=\"platform-search-type_1\" name=\"platform-search-type\" type=\"radio\" value=\"get_curator_playlists\"/>\n<label class=\"custom-control-label\" for=\"platform-search-type_1\">Curator Playlist(s)</label>\n</div>\n<span class=\"platform-search-help-text form-text text-muted\" id=\"platform-search-typeHelpBlock\">A PLAYLIST SEARCH uses the playlist name to return all matching playlists. A CURATOR PLAYLISTS SEARCH uses the curators name, returning all playlists owned by that curator.</span>\n</div>\n</div>\n<!-- end platform-search-type -->\n<!-- This select input indicates which platform and platform api the request is getting sent to. -->\n<!-- For now only spotify is being integrated, but in the future will be integrating other platforms that are similar, i.e. YouTube Music, Apple Music, etc. -->\n<!-- If the value is All then every platform integrated will be sent a request. Those multiple returns will be built into objects compiled from the various JSON returns from each respective API -->\n<!-- The options have been included in the select list but are all disabled save for the Spotify option. -->\n<div class=\"form-group row platform-search-target\">\n<label class=\"col-2 col-form-label\" for=\"platform-search-target\">Which Platform?</label>\n<div class=\"col-10\">\n<select aria-describedby=\"platform-search-targetHelpBlock\" class=\"custom-select\" id=\"platform-search-target\" name=\"platform-search-target\">\n<option selected=\"selected\" value=\"get_platform_spotify\">Spotify</option>\n<option disabled=\"\" value=\"get_platform_youtubemusic\">YouTube Music</option>\n<option disabled=\"\" value=\"get_platform_applemusic\">Apple Music</option>\n<option disabled=\"\" value=\"get_platform_all\">All</option>\n</select>\n<span class=\"platform-search-help-text form-text text-muted\" id=\"platform-search-target-platformHelpBlock\">Choose which platform you would like to search. Currently Spotify is the only integrated platform but others will be made available in future releases. Choosing All platfroms will search every integrated platform. This option will require significant time to retrieve results compared to single platform searches..</span>\n</div>\n</div>\n<!-- end platform-search-target -->\n<!-- This input sets the string that will be searched by. This string needs to be set to lowercase, and also needs to be sanitized to remove any characters that are not pertinent as well as all blank spaces, line breaks etc. -->\n<div class=\"form-group row platform-search-input\">\n<label class=\"col-2 col-form-label\" for=\"platform-search-input\">What Name or Title?</label>\n<div class=\"col-10\">\n<input aria-describedby=\"platform-search-inputHelpBlock\" class=\"form-control border-success\" id=\"platform-search-input\" name=\"platform-search-input\" placeholder=\"Playlist or Curator Name\" type=\"text\"/>\n<span class=\"platform-search-help-text form-text text-muted\" id=\"platform-search-inputHelpBlock\">Enter the name of the Playlist or the name of the Curator and Click the Access Artists button. Example: indiemono. Results return time is subject to the number of results found.</span>\n</div>\n</div>\n<!-- end platform-search-input -->\n<!-- This section if yes is selected, another api call will be made that gets all the playlist track information, and outputs it with the results.  -->\n<!-- GET PLAYLIST ITEMS: https://api.spotify.com/v1/playlists/{playlist_id}/tracks -->\n<!-- If this is not needed we don't need to make the call, it is set to No by default. -->\n<div class=\"form-group row platform-search-track-info\">\n<label class=\"col-2\">Include Track Info?</label>\n<div class=\"col-10\">\n<div class=\"custom-control custom-radio custom-control-inline\">\n<input aria-describedby=\"platform-search-track-infoHelpBlock\" checked=\"\" class=\"custom-control-input\" id=\"platform-search-track-info_0\" name=\"platform-search-track-info\" type=\"radio\" value=\"get_playlist_track_info_no\"/>\n<label class=\"custom-control-label\" for=\"platform-search-track-info_0\">NO</label>\n</div>\n<div class=\"custom-control custom-radio custom-control-inline\">\n<input aria-describedby=\"platform-search-track-infoHelpBlock\" class=\"custom-control-input\" id=\"platform-search-track-info_1\" name=\"platform-search-track-info\" type=\"radio\" value=\"get_playlist_track_info_yes\"/>\n<label class=\"custom-control-label\" for=\"platform-search-track-info_1\">YES</label>\n</div>\n<span class=\"platform-search-help-text form-text text-muted\" id=\"platform-search-track-infoHelpBlock\">If you would like the playlist(s) track info included choose YES. Choosing to include track info can increase results wait time.</span>\n</div>\n</div>\n<!-- end platform-search-track-info -->\n<div class=\"form-group row platform-search-submit\">\n<div class=\"offset-10 col-2\">\n<button class=\"btn btn-primary\" name=\"submit\" type=\"submit\">Access Artists</button>\n</div>\n</div>\n<!-- end platform-search-submit -->\n</form>\n<!-- end form -->\n</div>\n<!-- end search-platform-request -->\n<div class=\"search-platform-results-playlist-name\">\n<div class=\"search-platform-subheader\">\n<h3 class=\"search-platform-request-subheadline\">PLAYLISTS FOUND BY NAME</h3>\n</div>\n<!-- GET https://api.spotify.com/v1/playlists/{playlist_id} -->\n<!-- ...folowers.total -->\n<div class=\"table-responsive search-platform-result-table p-4\">\n<table class=\"table table-striped table-hover\">\n<thead>\n<tr>\n<th scope=\"col\"></th>\n<th scope=\"col\">Name</th>\n<th scope=\"col\">Owner</th>\n<th scope=\"col\"># of Tracks</th>\n<th scope=\"col\"># of Followers</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<!-- end search-platform-results-playlist-name -->\n<div class=\"search-platform-results-curator-name\">\n<div class=\"search-platform-subheader\">\n<h3 class=\"search-platform-request-subheadline\">PLAYLISTS OWNED BY CURATOR</h3>\n</div>\n<!-- GET https://api.spotify.com/v1/playlists/{playlist_id} -->\n<!-- ...folowers.total -->\n<div class=\"table-responsive search-platform-result-table p-4\">\n<table class=\"table table-striped table-hover\">\n<thead>\n<tr>\n<th scope=\"col\">Playl</th>\n<th scope=\"col\">Name</th>\n<th scope=\"col\">Owner</th>\n<th scope=\"col\"># of Tracks</th>\n<th scope=\"col\"># of Followers</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n<tr class=\"single-result-row\">\n<th class=\"single-result-image\" scope=\"row\">\n<img alt=\"Spotify Logo for Featured Spotify Playlist\" class=\"platform-logo spotify-logo\" src=\"assets/media/spotify_logo.png\"/>\n</th>\n<td class=\"single-result-playlist-name\">Playlist Name</td>\n<td class=\"single-result-curator-name\">Owner / Curator</td>\n<td class=\"single-result-numberoftracks\">000</td>\n<td class=\"single-result-numberoffollowers\">000000</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<!-- end search-platform-results-curator-name -->\n</div>\n</div>\n<!-- end section -->\n<div class=\"search-platform-result\">\n<table class=\"table table-striped table-hover\">\n<thead>\n<tr>\n<th scope=\"col\"></th>\n<th scope=\"col\">Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"search-platform-result-item\">\n<div class=\"\">\n</div>\n</div>\n</div>\n</div>\n<!-- <div id=\"tunefarm__spotify-search\">\n      <div class=\"row\">\n        <div class=\"col\">\n          input\n        </div>\n      </div>\n    </div> -->\n<script src=\"assets/js/scripts.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js\"></script>\n\n</div>",
  "templates/contacts/list.php": "<?php\n/**\n * Contacts list table template.\n *\n * @var \\TuneBridge\\Contacts_Table $table\n * @var array $statuses\n * @var string $current_status\n */\n\ndefined( 'ABSPATH' ) || exit;\n?>\n<div class=\"wrap\">\n\t<h1 class=\"wp-heading-inline\"><?php esc_html_e( 'Contacts', 'tunebridge' ); ?></h1>\n\t<a href=\"<?php echo esc_url( admin_url( 'post-new.php?post_type=tunebridge_contact' ) ); ?>\" class=\"page-title-action\"><?php esc_html_e( 'Add New', 'tunebridge' ); ?></a>\n\t<hr class=\"wp-header-end\">\n\n\t<form method=\"get\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"tunebridge-contacts\" />\n\t\t<div class=\"tablenav top\">\n\t\t\t<div class=\"alignleft actions\">\n\t\t\t\t<label for=\"tb_status\" class=\"screen-reader-text\"><?php esc_html_e( 'Filter by status', 'tunebridge' ); ?></label>\n\t\t\t\t<select name=\"tb_status\" id=\"tb_status\">\n\t\t\t\t\t<?php foreach ( $statuses as $val => $label ) : ?>\n\t\t\t\t\t\t<option value=\"<?php echo esc_attr( $val ); ?>\" <?php selected( $current_status, $val ); ?>><?php echo esc_html( $label ); ?></option>\n\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t</select>\n\t\t\t\t<?php submit_button( __( 'Filter', 'tunebridge' ), 'secondary', '', false ); ?>\n\t\t\t</div>\n\t\t\t<div class=\"alignleft actions\">\n\t\t\t\t<?php $table->search_box( __( 'Search Contacts', 'tunebridge' ), 'tb_contacts' ); ?>\n\t\t\t</div>\n\t\t</div>\n\t</form>\n\n\t<form method=\"get\" style=\"margin-top:10px;\">\n\t\t<input type=\"hidden\" name=\"action\" value=\"tunebridge_export_csv\" />\n\t\t<input type=\"hidden\" name=\"page\" value=\"tunebridge-contacts\" />\n\t\t<input type=\"hidden\" name=\"tb_status\" value=\"<?php echo esc_attr( $current_status ); ?>\" />\n\t\t<?php if ( ! empty( $_GET['s'] ) ) : ?>\n\t\t\t<input type=\"hidden\" name=\"s\" value=\"<?php echo esc_attr( sanitize_text_field( wp_unslash( $_GET['s'] ) ) ); ?>\" />\n\t\t<?php endif; ?>\n\t\t<?php wp_nonce_field( 'tb_export_csv', '_tb_export_nonce' ); ?>\n\t\t<?php submit_button( __( 'Export CSV', 'tunebridge' ), 'secondary', '', false ); ?>\n\t</form>\n\n\t<form method=\"post\">\n\t\t<?php wp_nonce_field( 'tb_contacts_bulk', '_tb_contacts_nonce' ); ?>\n\t\t<?php $table->display(); ?>\n\t</form>\n</div>\n",
  "templates/contacts/meta-box.php": "<?php\n/**\n * Meta box template for contact fields.\n *\n * @var array $fields\n * @var array $statuses\n * @var WP_Post $post\n */\n\ndefined( 'ABSPATH' ) || exit;\n\nwp_nonce_field( 'tunebridge_save_contact', 'tunebridge_contact_nonce' );\n?>\n<div class=\"tunebridge-meta-box\">\n\t<p>\n\t\t<label for=\"tunebridge_status\"><?php _e( 'Status', 'tunebridge' ); ?></label><br>\n\t\t<select name=\"tunebridge_status\" id=\"tunebridge_status\">\n\t\t\t<?php foreach ( $statuses as $key => $label ) : ?>\n\t\t\t\t<option value=\"<?php echo esc_attr( $key ); ?>\" <?php selected( $fields['status'], $key ); ?>><?php echo esc_html( $label ); ?></option>\n\t\t\t<?php endforeach; ?>\n\t\t</select>\n\t</p>\n\t<p>\n\t\t<label for=\"tunebridge_email\"><?php _e( 'Email', 'tunebridge' ); ?></label><br>\n\t\t<input type=\"email\" name=\"tunebridge_email\" id=\"tunebridge_email\" class=\"regular-text\" value=\"<?php echo esc_attr( $fields['email'] ); ?>\">\n\t</p>\n\t<p>\n\t\t<label for=\"tunebridge_phone\"><?php _e( 'Phone', 'tunebridge' ); ?></label><br>\n\t\t<input type=\"text\" name=\"tunebridge_phone\" id=\"tunebridge_phone\" class=\"regular-text\" value=\"<?php echo esc_attr( $fields['phone'] ); ?>\">\n\t</p>\n\t<p>\n\t\t<label for=\"tunebridge_instagram\"><?php _e( 'Instagram', 'tunebridge' ); ?></label><br>\n\t\t<input type=\"url\" name=\"tunebridge_instagram\" id=\"tunebridge_instagram\" class=\"regular-text\" value=\"<?php echo esc_attr( $fields['instagram'] ); ?>\">\n\t</p>\n\t<p>\n\t\t<label for=\"tunebridge_twitter\"><?php _e( 'Twitter/X', 'tunebridge' ); ?></label><br>\n\t\t<input type=\"url\" name=\"tunebridge_twitter\" id=\"tunebridge_twitter\" class=\"regular-text\" value=\"<?php echo esc_attr( $fields['twitter'] ); ?>\">\n\t</p>\n\t<p>\n\t\t<label for=\"tunebridge_spotify\"><?php _e( 'Spotify URL', 'tunebridge' ); ?></label><br>\n\t\t<input type=\"url\" name=\"tunebridge_spotify\" id=\"tunebridge_spotify\" class=\"regular-text\" value=\"<?php echo esc_attr( $fields['spotify'] ); ?>\">\n\t</p>\n</div>\n",
  "assets/css/admin.css": "/* Default Colors */\n.color-brand-primary { color:rgba(0,0,0,1); }\n.color-brand-secondary { color:rgba(0,0,0,1); }\n.color-brand-highlight { color:rgba(0,0,0,1); }\n.color-black { color:rgba(55,1,58); }\n.color-white { color:rgba(255,255,255,1); }\n.color-gray { color:rgba(204,204,204,1); }\n.color-light { color:rgba(248,249,250,1); }\n.color-dark { color:rgba(55,1,58,1); }\n.color-blue { color:rgba(85,255,225,1); }\n.color-green { color:rgba(166,253,41,1); }\n.color-red { color:rgba(245,39,137,1); }\n.color-yellow { color:rgba(255,239,1); }\n.color-green { color:rgba(166,253,41,1); }\n.color-purple { color:rgba(175,61,255),1); }\n.color-orange { color:rgba(255,159,53,1); }\n.color-pink { color:rgba(255,59,148,1); }\n\n\n/* Boostrap Overrides */\n.color-override-primary{ color:rgba(0,123,255,1); }\n.color-override-seconary{ color:rgba(108,117,125,1); }\n.color-override-success { color:rgba(40,167,69,1); }\n.color-override-danger { color:rgba(220,53,69,1); }\n.color-override-warning { color:rgba(255,193,7,1); }\n.color-override-info { color:rgba(23,162,84,1); }\n.color-override-dark { color:rgba(52,58,64,1); }\n.color-override-light { color:rgba(248,249,250,1); }\n.color-overide-text { color:rgba(0,0,0,1); }\n.color-override-headline{ color:rgba(0,0,0,1); }\n(166,253,41)\n\n\n\n#tfaa__all-featured-playlists {\n\n  & .all-featured-playlist-section-header {\n    border-bottom: dotted 2px rgba(0, 0, 0, 0.6);\n    margin-bottom: 1.5rem;\n\n    & h2 {\n      font-size: 1.3rem;\n      text-transform: uppercase;\n      opacity: .6;\n    }\n  }\n\n  & .featured-playlist {\n    & .featured-playlist-head {\n      border-bottom: dotted 2px rgba(0, 0, 0, 0.25);\n      margin: 2rem 1rem 1.5rem 1rem;\n\n      & h3 {\n        font-size: 1.2rem;\n        text-transform: uppercase;\n        opacity: .4;\n      }\n    }\n  }\n}\n\n/* Featured Playlist Card Styles */\n.featured-playlist-item {\n  margin-bottom: 2rem;\n  min-width: 200px;\n\n  & .card {\n\n    & .featured-playlist-image {\n      max-height: 100px;\n      object-fit: cover;\n    }\n\n    & .card-body {\n      position: relative;\n      padding-top: .75rem;\n\n      & .featured-playlist-context-info {\n        margin-bottom: .5rem;\n\n        & span.track-count {\n          margin: 0;\n          padding: 0;\n          font-size: .7rem;\n          opacity: .5;\n          line-height: 1rem;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n\n          & span {\n\n          }\n        }\n\n        & img.platform-logo {\n          height: auto;\n        }\n\n        /* Other Logo specifications here */\n\n        & .spotify-logo {\n          width: 70px;\n        }\n\n      }\n\n      & .card-title {\n        font-size: 1rem;\n        margin-bottom: 0;\n\n        & a {\n          &:hover {}\n        }\n      }\n\n      & .card-text {\n        font-size: .9rem;\n\n        & a {\n          &:hover {}\n        }\n      }\n    }\n\n    & .card-footer {\n\n      & .featured-playlist-footer-title {\n        font-size: .7rem;\n        text-transform: uppercase;\n        font-weight: bold;\n        opacity: .5;\n        margin: 0 0 .5rem 0;\n      }\n\n      & .featured-playlist-quick-links {\n        gap: .5rem;\n\n        & a {\n          font-size: .7rem;\n        }\n\n        & .featured-playlist-button-goto-curator {}\n\n        & .featured-playlist-button-goto-playlist {}\n      }\n    }\n  }\n}\n\n#tfaa__search-platform {\n\n  & .search-platform-header {\n    border-bottom: dotted 2px rgba(0, 0, 0, 0.6);\n    margin-bottom: 1.5rem;\n\n    & .search-platform-headline {\n      font-size: 1.3rem;\n      text-transform: uppercase;\n      opacity: .6;\n    }\n  }\n}\n\n.search-platform {\n\n  & .search-platform-subheader {\n    border-bottom: dotted 2px rgba(0, 0, 0, 0.25);\n    margin: 2rem 1rem 1rem 1rem;\n\n    & h3 {\n      font-size: 1.2rem;\n      text-transform: uppercase;\n      opacity: .4;\n    }\n  }\n\n  & .search-platform-request {\n\n    & form {\n\n      & .platform-search-help-text {\n        font-size: .75rem;\n      }\n\n      & .platform-search-type {\n\n      }\n\n      & .platform-search-target {\n\n      }\n\n      & .platform-search-input {\n\n        & input {\n          border-width: .1rem;\n        }\n      }\n\n      & .platform-search-track-info {\n\n      }\n\n      & .platform-search-submit {\n\n        & button {\n          width: 100%;\n        }\n      }\n    }\n  }\n\n  & .search-platform-results-playlist-name {\n    & .search-platform-result-table {\n      padding-top: 1rem !important;\n\n      & thead {\n        & tr {\n          & th {\n            text-align: center;\n            vertical-align: middle;\n            border-top: none;\n            padding-top: 0;\n          }\n        }\n      }\n\n      & tbody {\n\n        & tr {\n\n          & th {\n            vertical-align: middle;\n            text-align: center;\n          }\n\n          & td {\n            vertical-align: middle;\n            text-align: center;\n          }\n\n        }\n\n        & .single-result-row {\n\n        }\n\n        & .single-result-image {\n\n          & img {\n            width: 100px;\n            height: 100px;\n            object-fit: contain;\n          }\n        }\n\n        & .single-result-playlist-name {\n\n        }\n\n        & .single-result-curator-name {\n\n        }\n\n        & .single-result-numberoftracks {\n\n        }\n\n        & .single-result-numberoffollowers {\n\n        }\n      }\n    }\n  }\n\n  & .search-platform-results-curator-name {\n    & .search-platform-result-table {\n      padding-top: 1rem !important;\n\n      & thead {\n        & tr {\n          & th {\n            text-align: center;\n            vertical-align: middle;\n            border-top: none;\n            padding-top: 0;\n          }\n        }\n      }\n\n      & tbody {\n\n        & tr {\n\n          & th {\n            vertical-align: middle;\n            text-align: center;\n          }\n\n          & td {\n            vertical-align: middle;\n            text-align: center;\n          }\n\n        }\n\n        & .single-result-row {\n\n        }\n\n        & .single-result-image {\n\n          & img {\n            width: 100px;\n            height: 100px;\n            object-fit: contain;\n          }\n        }\n\n        & .single-result-playlist-name {\n\n        }\n\n        & .single-result-curator-name {\n\n        }\n\n        & .single-result-numberoftracks {\n\n        }\n\n        & .single-result-numberoffollowers {\n\n        }\n      }\n    }\n  }\n}\n\n.tunebridge-dashboard .tab-section{display:none;} .tunebridge-dashboard .tab-section.active{display:block;}",
  "assets/js/admin.js": "\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\tconst tabs = document.querySelectorAll('.nav-tab');\n\tconst sections = document.querySelectorAll('.tab-section');\n\ttabs.forEach(tab => {\n\t\ttab.addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\t\t\ttabs.forEach(t => t.classList.remove('nav-tab-active'));\n\t\t\ttab.classList.add('nav-tab-active');\n\t\t\tconst tabId = tab.dataset.tab;\n\t\t\tsections.forEach(section => section.classList.remove('active'));\n\t\t\tdocument.getElementById('tab-' + tabId).classList.add('active');\n\t\t});\n\t});\n});",
  "tools/class-cli.php": "<?php\n/**\n * WP-CLI commands for TuneBridge releases.\n *\n * Usage:\n *   wp tunebridge bump --version=1.2.3 --note=\"Added CSV export\"\n *\n * @package TuneBridge\n */\n\nnamespace TuneBridge\\Tools;\n\nuse WP_CLI;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass CLI {\n\n\tpublic static function register() {\n\t\t\\WP_CLI::add_command( 'tunebridge bump', [ __CLASS__, 'bump' ] );\n\t}\n\n\tpublic static function bump( $args, $assoc_args ) {\n\t\t$version = isset( $assoc_args['version'] ) ? $assoc_args['version'] : '';\n\t\t$note    = isset( $assoc_args['note'] ) ? $assoc_args['note'] : '';\n\n\t\tif ( empty( $version ) ) {\n\t\t\t\\WP_CLI::error( 'Please provide --version=x.y.z' );\n\t\t}\n\t\tself::update_main_plugin_version( $version );\n\t\tself::update_changelog( $version, $note );\n\t\t\\WP_CLI::success( 'Version bumped to ' . $version . ' and changelog updated.' );\n\t}\n\n\tprotected static function update_main_plugin_version( $version ) {\n\t\t$plugin_file = TUNEBRIDGE_PLUGIN_DIR . 'tunebridge.php';\n\t\t$contents = file_get_contents( $plugin_file );\n\t\t$contents = preg_replace( '/Version:\\s*([0-9\\.]+)/', 'Version: ' . $version, $contents );\n\t\t$contents = preg_replace( '/define\\(\\s*\\' + \"'\" + 'TUNEBRIDGE_VERSION' + \"'\" + '\\s*,\\s*\\' + \"'\" + '[0-9\\.]+' + \"'\" + '\\s*\\)/', 'define( \\'TUNEBRIDGE_VERSION\\', \\'{}\\' )'.format(version), $contents )\n\t\t; // This pattern replacement is tricky in PHP, fallback below.\n\t\t// Fallback: simple replace for constant line.\n\t\t$contents = preg_replace( '/define\\(\\s*\\'TUNEBRIDGE_VERSION\\'\\s*,\\s*\\'[^\\']*\\'\\s*\\);/', 'define( \\'TUNEBRIDGE_VERSION\\', \\'%s\\' );' );\n\t\tfile_put_contents( $plugin_file, sprintf( $contents, $version ) );\n\t}\n\n\tprotected static function update_changelog( $version, $note ) {\n\t\t$changelog = TUNEBRIDGE_PLUGIN_DIR . 'CHANGELOG.md';\n\t\t$date = date( 'Y-m-d' );\n\t\t$entry = \"\\n## \" . $version . \" - \" . $date . \"\\n\\n\" . ( $note ? \"- \" . $note . \"\\n\" : \"\" );\n\t\tif ( file_exists( $changelog ) ) {\n\t\t\t$prev = file_get_contents( $changelog );\n\t\t\tfile_put_contents( $changelog, $entry . \"\\n\" . $prev );\n\t\t} else {\n\t\t\tfile_put_contents( $changelog, \"# Changelog\\n\" . $entry );\n\t\t}\n\t}\n}\n\nif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\tCLI::register();\n}\n"
}